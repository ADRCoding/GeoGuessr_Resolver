javascript:(async function()%7B%0A%0Alet globalCoordinates = %7B%0A    lat: 0,%0A    lng: 0%0A%7D%0A%0Alet globalPanoID = undefined%0A%0A%0Avar originalOpen = XMLHttpRequest.prototype.open;%0AXMLHttpRequest.prototype.open = function(method, url) %7B%0A%0A    if (method.toUpperCase() === 'POST' &&%0A        (url.startsWith('https://maps.googleapis.com/$rpc/google.internal.maps.mapsjs.v1.MapsJsInternalService/GetMetadata') %7C%7C%0A            url.startsWith('https://maps.googleapis.com/$rpc/google.internal.maps.mapsjs.v1.MapsJsInternalService/SingleImageSearch'))) %7B%0A%0A        this.addEventListener('load', function () %7B%0A            let interceptedResult = this.responseText%0A            const pattern = /-?%5Cd+%5C.%5Cd+,-?%5Cd+%5C.%5Cd+/g;%0A            let match = interceptedResult.match(pattern)%5B0%5D;%0A            let split = match.split(",")%0A%0A            let lat = Number.parseFloat(split%5B0%5D)%0A            let lng = Number.parseFloat(split%5B1%5D)%0A%0A%0A            globalCoordinates.lat = lat%0A            globalCoordinates.lng = lng%0A        %7D);%0A    %7D%0A%0A    return originalOpen.apply(this, arguments);%0A%7D;%0A%0A%0A%0A%0Afunction placeMarker(safeMode)%7B%0A    let %7Blat,lng%7D = globalCoordinates%0A%0A    if (safeMode) %7B%0A        const sway = %5BMath.random() > 0.5,Math.random() > 0.5%5D%0A        const multiplier = Math.random() * 4%0A        const horizontalAmount = Math.random() * multiplier%0A        const verticalAmount = Math.random() * multiplier%0A        sway%5B0%5D ? lat += verticalAmount : lat -= verticalAmount%0A        sway%5B1%5D ? lng += horizontalAmount : lat -= horizontalAmount%0A    %7D%0A%0A    let element = document.querySelectorAll(%27%5Bclass%5E="guess-map_canvas__"%5D%27)%5B0%5D%0A    if(!element)%7B%0A        placeMarkerStreaks()%0A        return%0A    %7D%0A%0A    const latLngFns = %7B%0A        latLng:%7B%0A            lat: () => lat,%0A            lng: () => lng,%0A        %7D%0A    %7D%0A%0A%0A    const reactKeys = Object.keys(element)%0A    const reactKey = reactKeys.find(key => key.startsWith("__reactFiber$"))%0A    const elementProps = element%5BreactKey%5D%0A    const mapElementClick = elementProps.return.return.memoizedProps.map.__e3_.click%0A    const mapElementPropKey = Object.keys(mapElementClick)%5B0%5D%0A    const mapClickProps = mapElementClick%5BmapElementPropKey%5D%0A    const mapClickPropKeys = Object.keys(mapClickProps)%0A%0A    for(let i = 0; i < mapClickPropKeys.length ;i++)%7B%0A        if(typeof mapClickProps%5BmapClickPropKeys%5Bi%5D%5D === "function")%7B%0A            mapClickProps%5BmapClickPropKeys%5Bi%5D%5D(latLngFns)%0A        %7D%0A    %7D%0A%7D%0A%0Afunction placeMarkerStreaks()%7B%0A    let %7Blat,lng%7D = globalCoordinates%0A    let element = document.getElementsByClassName("region-map_mapCanvas__0dWlf")%5B0%5D%0A    if(!element)%7B%0A        return%0A    %7D%0A    const reactKeys = Object.keys(element)%0A    const reactKey = reactKeys.find(key => key.startsWith("__reactFiber$"))%0A    const elementProps = element%5BreactKey%5D%0A    const mapElementClick = elementProps.return.return.memoizedProps.map.__e3_.click%0A    const mapElementClickKeys = Object.keys(mapElementClick)%0A    const functionString = "(e.latLng.lat(),e.latLng.lng())%7D"%0A    const latLngFn = %7B%0A        latLng:%7B%0A            lat: () => lat,%0A            lng: () => lng,%0A        %7D%0A    %7D%0A%0A%0A    for(let i = 0; i < mapElementClickKeys.length; i++)%7B%0A        const curr = Object.keys(mapElementClick%5BmapElementClickKeys%5Bi%5D%5D)%0A        let func = curr.find(l => typeof mapElementClick%5BmapElementClickKeys%5Bi%5D%5D%5Bl%5D === "function")%0A        let prop = mapElementClick%5BmapElementClickKeys%5Bi%5D%5D%5Bfunc%5D%0A        if(prop && prop.toString().slice(5) === functionString)%7B%0A            prop(latLngFn)%0A        %7D%0A    %7D%0A%7D%0A%0Afunction mapsFromCoords() %7B %0A%0A    const %7Blat,lng%7D = globalCoordinates%0A    if (!lat %7C%7C !lng) %7B%0A        return;%0A    %7D%0A%0A    if (nativeOpen) %7B%0A        const nativeOpenCodeIndex = nativeOpen.toString().indexOf(%27native code%27)%0A%0A%0A        if (nativeOpenCodeIndex === 19 %7C%7C nativeOpenCodeIndex === 23) %7B%0A            nativeOpen(%60https://maps.google.com/?output=embed&q=$%7Blat%7D,$%7Blng%7D&ll=$%7Blat%7D,$%7Blng%7D&z=5%60);%0A        %7D%0A    %7D%0A%7D%0A%0A%0Afetch(%60https://geoguessrping.0x978.com/ping?script_version=13%60)%0A%0Aconst scripts = document.querySelectorAll(%27script%27);%0Ascripts.forEach(script => %7B%0A    if (script.id === "resolver-cheat-detection-script") %7B%0A        script.remove()%0A    %7D%0A%7D);%0A%0Alet onKeyDown = (e) => %7B%0A    if (e.keyCode === 49) %7B%0A        e.stopImmediatePropagation(); %0A        placeMarker(true)%0A    %7D%0A    if (e.keyCode === 50) %7B%0A        e.stopImmediatePropagation();%0A        placeMarker(false)%0A    %7D%0A    if (e.keyCode === 51) %7B%0A        e.stopImmediatePropagation();%0A        mapsFromCoords(false)%0A    %7D%0A%7D%0A%0Adocument.addEventListener("keydown", onKeyDown);%7D)()
